{"mappings":"AAAA,oCAAoC;AACpC,uCAAuC;AACvC,aAAa;AACb,yBAAyB;AACzB,gCAAgC;AAChC,QAAQ;AACR,gCAAgC;AAChC,oEAAoE;AACpE,wBAAwB;AAExB,oDAAoD;AACpD,mCAAmC;AAChC,cAAc;AACd,eAAe;AACf,iCAAiC;AACjC,8DAA8D;AAEjE,mDAAmD;AACnD,sCAAsC;AACxB,oFAAoF;AAClG,uCAAuC;AACjC,uDAAuD;AAC7D,6BAA6B;AACxB,0DAA0D;AAC1D,qDAAqD;AAC1D,4CAA4C;AAC/B,yDAAyD;AACtE,wFAAwF;AACxF,sCAAsC;AACtC,qCAAqC;AACrC,yBAAyB;AACzB,wDAAwD;AACxD,qEAAqE;AACrD,+BAA+B;AAC/C,wEAAwE;AACxE,+EAA+E;AAC/E,qEAAqE;AACrE,uCAAuC;AACpC,gDAAgD;AAC3C,mEAAmE;AAE3E,8EAA8E;AACjE,qBAAqB;AAClC,8CAA8C;AAG9C,MAAM,UAAU,MAAM,aAAa,CAC/B,OACA;IAAC,IAAG;AAAQ,GACZ;IAAC,MAAM,aAAa,CAAC,OAAM;QAAC,IAAG;IAAO,GAAE;QACpC,MAAM,aAAa,CAAC,MAAM;YAAC,IAAI;QAAU,GAAG;QAC5C,MAAM,aAAa,CAAC,MAAM;YAAC,IAAI;QAAU,GAAG;KACnD;IACD,MAAM,aAAa,CAAC,OAAO;QAAC,IAAI;IAAQ,GAAE;QAC1C,MAAM,aAAa,CAAC,MAAM;YAAC,IAAI;QAAU,GAAG;QAC5C,MAAM,aAAa,CAAC,MAAM;YAAC,IAAI;QAAU,GAAG;KAC3C;CACI;AAED,8DAA8D;AAC9D,gDAAgD;AACpD,MAAM,OAAM,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AACxD,KAAK,MAAM,CAAC","sources":["App.js"],"sourcesContent":["//  using React to print hello world\r\n// const heading = React.createElement(\r\n//     \"h1\", \r\n//     {id: \"heading\"} , \r\n//     \"Hello World from React!\"\r\n//     )\r\n// console.log(heading) //object\r\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"))\r\n// root.render(heading);\r\n\r\n// ReactElement(Object) => HTML(Browser understands)\r\n//createElement has three Argument\"\r\n   // a. html tag\r\n   // b. attribute\r\n   // c. children: 1. single child  \r\n   //              2. multiple child=> pass as an array as below.\r\n\r\n// npm: manages packages. it doesn't have fullform.\r\n// npm init: create package.json file.\r\n              //package.json: its a configuration for npm, we can see all added dependencies here.\r\n// Bundler: most important dependencies\r\n      // e.g: Parcel(we have used this), Webpack,            \r\n// Two types of dependencies:\r\n     //     1. Dev dependencies: used during development of app\r\n     //     2. Normal dependencies used during production.\r\n// To install parcel: npm install -D parcel.\r\n             //-D: we used it to tell npm to provide dev dependencies.\r\n// caret(^): it will automatically update minor version. It's fine to do minor updates. \r\n//         e.g.:  \"devDependencies\": {\r\n//                \"parcel\": \"^2.11.0\"\r\n//                      }\r\n// tilde(~): it will automatically update MAJOR version.\r\n// package-lock.json: it keeps the record of exact version installed.\r\n                // doesn't have CARET or TILDE.\r\n// node modules: database of dependencies and packages installed in app.\r\n// Transitive dependencies: When a dependency e.g. parcel has dependencies and \r\n//                          these dependencies has more dependencies.\r\n// How many package.json a project has?\r\n   //Ans: It depends on the dependencies installed \r\n        // because every package or dependencies have its own package.json.\r\n\r\n// .gitignore: keep the files which we don't want to take to git or production\r\n             // e.g. /node_modules\r\n// igniting app command: npx parcel index.html\r\n             \r\n\r\nconst heading = React.createElement(\r\n    \"div\",\r\n    {id:\"parent\"},\r\n    [React.createElement(\"div\",{id:\"child\"},[\r\n        React.createElement(\"h1\", {id: \"heading1\"}, \"This is H1 tag\"),\r\n        React.createElement(\"h2\", {id: \"heading2\"}, \"This is H2 tag\")\r\n]),\r\nReact.createElement(\"div\", {id: \"child2\"},[\r\nReact.createElement(\"h1\", {id: \"heading1\"}, \"This is H1 tag\"),\r\nReact.createElement(\"h2\", {id: \"heading2\"}, \"This is H2 tag\")\r\n]),\r\n    ]);\r\n\r\n    // Since above way is very tds and hard to track the structure\r\n    // we will use JSX which will simplfy this code.\r\nconst root =ReactDOM.createRoot(document.getElementById(\"root\"))\r\nroot.render(heading);"],"names":[],"version":3,"file":"index.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}